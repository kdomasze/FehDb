@page
@model FehDb.Web.Pages.Weapons.IndexModel
@{
    ViewData["Title"] = "Index";
}

@using FehDb.Web.Helpers

<h2>Weapons</h2>

<form class="form-horizontal">
    <div class="input-group">
        <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
        <input type="text" class="form-control" id="searchInput" name="search" placeholder="Search...">
    </div>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                @Html.SortLink(Html.DisplayNameFor(model => model.Weapons.Results[0].Name), (string)ViewData["NameSortParam"], Model.CurrentPage, Model.CurrentSearch)
            </th>
            <th>
                @Html.SortLink(Html.DisplayNameFor(model => model.Weapons.Results[0].Might), (string)ViewData["MightSortParam"], Model.CurrentPage, Model.CurrentSearch)
            </th>
            <th>
                @Html.SortLink(Html.DisplayNameFor(model => model.Weapons.Results[0].Range), (string)ViewData["RangeSortParam"], Model.CurrentPage, Model.CurrentSearch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weapons.Results[0].Effect)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weapons.Results[0].Refined)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weapons.Results[0].WeaponType)
            </th>
            <th>
                Links
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Weapons.Results.Count; i++)
        {
            <tr>
                <td>
                    @Model.Weapons.Results[i].Name
                </td>
                <td>
                    @Model.Weapons.Results[i].Might
                </td>
                <td>
                    @Model.Weapons.Results[i].Range
                </td>
                <td>
                    @Model.Weapons.Results[i].Effect
                </td>
                <td>
                    @Model.Weapons.Results[i].Refined
                </td>
                <td>
                    @Model.Weapons.Results[i].WeaponType.ToString()
                </td>
                <td>
                    <a>Details</a> | <a>Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="...">
    <ul class="pager">
        @if (Model.Weapons.CurrentPage == 1)
        {
        <li class="previous disabled">
            <span><span aria-hidden="true">&larr;</span> Previous</span>
        </li>
        }
        else
        {
        <li class="previous"><a asp-page="./Index" 
                                asp-route-SortBy=@Model.CurrentSorting  
                                asp-route-Search=@Model.CurrentSearch
                                asp-route-pageIndex="@(Model.Weapons.CurrentPage - 1)" aria-label="Previous">
            <span aria-hidden="true">&larr;</span> Previous
             </a>
        </li>
        }
        <li>
            @Model.Weapons.CurrentPage / @Model.Weapons.PageCount
        </li>

        @if (Model.Weapons.CurrentPage == Model.Weapons.PageCount)
        {
        <li class="next disabled">
            <span> Next <span aria-hidden="true">&rarr;</span></span>
        </li>
        }
        else
        {
        <li class="next"><a asp-page="./Index" 
                            asp-route-SortBy=@Model.CurrentSorting 
                            asp-route-Search=@Model.CurrentSearch
                            asp-route-pageIndex="@(Model.Weapons.CurrentPage + 1)" aria-label="Next">
            Next <span aria-hidden="true">&rarr;</span>
             </a>
        </li>
        }
    </ul>
</nav>